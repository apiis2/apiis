#!/usr/bin/perl -w
#
##############################################################################
# $Id: test.Form,v 1.12 2005/08/02 12:33:07 heli Exp $
##############################################################################
# This is only a test file to help during development. You can see how to
# use the different methods of the Form object.

BEGIN {
    use Env qw( APIIS_HOME );
    die "\n\tAPIIS_HOME is not set!\n\n" unless $APIIS_HOME;
    push @INC, "$APIIS_HOME/lib";
}

use strict;
use warnings;
use CGI;
use Apiis;
Apiis->initialize( VERSION => '$Revision: 1.12 $' );
use Apiis::Form::Tk;
use Apiis::Form::HTML;
use Apiis::DataBase::User;
use Data::Dumper;
use Apiis::Form::WWWUtilities;
use Apache::Session::File;
use CGI qw/:standard :html3 :html4 /;
use JSON;

use Apiis::Errors;
use Getopt::Std;
use Apiis::Init;
use Apiis::DataBase::Init;
use Apiis::DataBase::User;
use Apiis::DataBase::Record;

$Data::Dumper::Indent = 1;
$Data::Dumper::Terse  = 1;

##############################################################################
# create a user object to save repeated user/pw typing during tests:
my $testuser = Apiis::DataBase::User->new(
    id       => 'zwisss',
    password => 'snakx1dd',
);
$testuser->check_status;
my $testform='lammungen.pfrm';

$apiis->join_model( 'ovicap_sn', userobj => $testuser );
$apiis->check_status;
##############################################################################

my $query = CGI->new();

my ($json, $form, $sid, $cgi, $gui);

$cgi->{'json'} =
    '{"sid":"673df923a709617d6fb4dc6c448484d0","info":"","form":"/home/b08mueul/apiis/ovicap_sn/etc/forms/lammungen.pfrm","data":[{"F536":["","",""],"F507":["","",""],"F518":["","",""],"Fanimal_ext_unit":["10-vvo-nummer","",""],"F509":["","",""],"F521":["","",""],"F539":["","",""],"Fanimal_ext_id":["de0114","",""],"F551":["","",""],"F505":["","",""],"F542":["","",""],"F524":["","",""],"Fanimal_ext_animal":["000116635","",""],"F548":["","",""],"F512":["","",""],"F533":["","",""],"F515":["","",""],"F530":["","",""]}],"command":"do_query_block"}';


if ( $cgi->{'json'} ) {
use Encode;
$cgi->{'json'} = decode( "UTF-8", $cgi->{'json'} );
    $json         = jsonToObj( $cgi->{json} );
    $form         = $json->{'form'};
    $sid          = $json->{'sid'};
    $cgi->{'sid'} = $json->{'sid'};
} else {
  $form=$testform;
}


$gui = Apiis::Form::HTML->new( xmlfile => $form );
$gui->gui_type('HTML');

if ( $gui->status ) {
    $apiis->errors( $gui->errors );
    $apiis->status(1);
}
goto ERR if $apiis->status;
$gui->{_cgi}   = $cgi;
$gui->{_query} = $query;

if ($cgi->{'json'}) {
$gui->PrintHeaderAjax();
goto ERR if ( $gui->status );
if ( $json->{'command'} eq 'do_save_block' ) {
    $gui->SaveJSONData();
    goto ERR if ( $gui->status );
}
elsif ( $json->{'command'} eq 'do_runevents' ) {
    print $gui->RunJSONEvents();
    goto ERR if ( $gui->status );
}
else {
    print $gui->QueryJSONData();
    goto ERR if ( $gui->status );
}
} else {
        print $gui->{_query}->header;
        $gui->PrintHeaderInit();
        $gui->CreateJSONData();
	$gui->PrintBody();
	$gui->PrintForm;
}

